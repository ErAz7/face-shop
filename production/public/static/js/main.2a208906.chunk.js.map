{"version":3,"sources":["layout/assets/logo/light.png","layout/styles/Font/index.js","layout/styles/Palette/index.js","layout/styles/Spacing/index.js","layout/styles/index.js","layout/hooks/useFetch/index.js","api/products/fetchProducts.js","layout/components/GridList/index.js","layout/components/ProductCard/components/Face.js","layout/components/ProductCard/components/Footer.js","layout/functions/centToDollar.js","layout/functions/relativeDate.js","layout/functions/formatDate.js","layout/components/ProductCard/index.js","layout/components/Logo/index.js","layout/components/Header/components/LogoText.js","layout/components/Header/components/HeaderButton.js","layout/components/Header/components/SortBy.js","layout/components/Header/components/SortOptions.js","layout/components/Header/index.js","layout/components/Footer/index.js","layout/components/AdCard/index.js","layout/containers/Catalogue/index.js","api/config/constants.js","api/ads/fetchAdURL.js","layout/index.js","layout/theme/index.js","index.js"],"names":["module","exports","createGlobalStyle","theme","fontFamily","primary","palette","light","main","Font","Palette","Spacing","useState","waiting","error","data","state","setState","fetch","request","onSuccess","onFailure","a","async","promise","axios","response","addFilter","query","name","value","GridList","React","forwardRef","props","ref","children","others","Container","container","item","xs","sm","styled","Grid","ZoomText","div","zoom","secondary","semiLight","SkeletonText","Skeleton","SkeletonSize","SkeletonDate","Top","Text","size","ratio","Size","ultraLight","Date","date","skeleton","face","setZoom","variant","onClick","length","Dollar","span","Price","Buy","Cart","ShoppingCartIcon","price","cent","strCent","toString","dollar","substr","remainingCent","dateStr","now","diff","parseInt","getTime","day","getDate","monthIndex","getMonth","year","getFullYear","formatDate","count","widths","ContentContainer","grey","dark","RatioContainer","Button","StyledProductCard","disabled","relativeDate","centToDollar","breakpoints","up","memo","prev","next","src","LogoImg","alt","color","text","Logo","onChange","selected","shrink","show","handleChange","newValue","hide","IconButton","LogoTextContainer","SortByContainer","sortBy","onSortChange","sortDisabled","useTheme","breakpointMatch","useMediaQuery","showSortBy","setShowSortBy","md","zIndex","max","header","height","small","medium","Sad","SentimentDissatisfiedIcon","Progess","CircularProgress","EndText","loading","Image","img","LidHalf","grow","semiDark","expand","fullWidth","loaded","setLoaded","setExpand","mainRef","useRef","down","useEffect","mainContainer","current","timer","setInterval","top","offsetTop","offsetHeight","window","pageYOffset","innerHeight","clearInterval","onLoad","useFetch","fetchProductState","fetchProducts","fetchAdsURLState","fetchAdsURL","products","setProducts","ads","setAds","limit","setLimit","setSortBy","skeletonLimit","setSkeletonLimit","endOfCatalogue","setEndOfCatalogue","changeOriginStamp","gridListRef","handleFetchProducts","handleFetchAdsURL","scrollTo","AllCatalogueShown","bottomChecker","loadMoreIfBottom","idleChecker","loadMoreIfIdle","checkIfReachedBottom","expandVisible","reset","page","sort","url","BASE_PATH","method","fetchProductRequest","handleFetchProductsSuccess","startStamp","concat","rnd","Math","random","fetchAdURLRequest","handleFetchAdsURLSuccess","responseURL","displayProducts","slice","skeletonProducts","useMemo","out","i","push","map","product","key","index","modeAdEvery","adIndex","ad","Fragment","id","MUIMergedTheme","createMuiTheme","min","med","Layout","StylesProvider","injectFirst","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a208906.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/light.7bd48eca.png\";","import { createGlobalStyle } from \"styled-components\";\r\n\r\n// defines global font styles\r\n\r\nexport default createGlobalStyle`\r\n    *{\r\n    \tfont-family: ${({ theme }) => theme.fontFamily.primary}\r\n    }\r\n`;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\n// sets global coloring styles\r\n\r\nexport default createGlobalStyle`\r\n    body{\r\n        background-color: ${({ theme }) => theme.palette.light.main};\r\n    }\r\n`;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\n// sets global spacing styles\r\n\r\nexport default createGlobalStyle`\r\n    body{\r\n        margin: 0;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport Font from \"./Font\";\r\nimport Palette from \"./Palette\";\r\nimport Spacing from \"./Spacing\";\r\n\r\n// defines app global styles\r\n\r\nexport default () => (\r\n\t<>\r\n\t\t<Font />\r\n\t\t<Palette />\r\n\t\t<Spacing />\r\n\t</>\r\n);\r\n","import axios from \"axios\";\n\nimport { useState } from \"react\";\n\n// this hook will return an object\n// with two props :\n//  1. state: keeps state of XHR request\n//  with three props: waiting, error, data\n//  2. fetch: a function that receives 3 args:\n//  request (axios request), success callback and\n//  failure callback and sends XHR request\n\nexport default function() {\n    const initialState = {\n        waiting: null,\n        error: null,\n        data: null\n    };\n    const [state, setState] = useState(initialState);\n\n    async function fetch(request, onSuccess, onFailure) {\n        setState({\n            ...state,\n            waiting: true\n        });\n\n        try {\n            const promise = axios(request);\n\n            const response = await promise;\n\n            if (onSuccess) {\n                onSuccess(response);\n            }\n            setState({\n                ...state,\n                waiting: false,\n                data: response.data\n            });\n\n            return promise;\n        } catch (err) {\n            if (onFailure) {\n                onFailure(err);\n            }\n            setState({\n                ...state,\n                waiting: false,\n                error: err\n            });\n        }\n    }\n\n    return {\n        state,\n        fetch\n    };\n}\n","import { FETCH_PRODUCTS_URL } from \"../config/constants\";\r\n\r\n// this function creates a request for\r\n// products API to be passed to axios later\r\n\r\nexport default ({ page, limit, sort } = {}) => {\r\n\tlet query = \"\";\r\n\tquery = addFilter(query, \"page\", page);\r\n\tquery = addFilter(query, \"limit\", limit);\r\n\tquery = addFilter(query, \"sort\", sort);\r\n\r\n\treturn {\r\n\t\turl: FETCH_PRODUCTS_URL + query,\r\n\t\tmethod: \"GET\"\r\n\t};\r\n};\r\n\r\n// this function takes query, filter name and filter,\r\n// applies filters and returns new query\r\nconst addFilter = (query, name, value) =>\r\n\tquery +\r\n\t(value === 0 || value\r\n\t\t? `${query === \"\" ? \"?\" : \"&\"}_${name}=${value}`\r\n\t\t: \"\");\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n// this is the container for grid list\r\n\r\nconst GridList = React.forwardRef((props, ref) => {\r\n\tconst { children, ...others } = props;\r\n\tconst breakpoints = {\r\n\t\txs: 11,\r\n\t\tsm: 11\r\n\t};\r\n\treturn (\r\n\t\t<div ref={ref} {...others}>\r\n\t\t\t<Container container item {...breakpoints}>\r\n\t\t\t\t{children}\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\nconst Container = styled(Grid)`\r\n\tdisplay: inline-flex;\r\n\tjustify-content: space-between;\r\n\tflex-wrap: wrap;\r\n`;\r\n\r\nexport default styled(GridList)`\r\n\ttext-align: center;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FormatSizeIcon from \"@material-ui/icons/FormatSize\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\n// renders face, size, and date\r\n// has an option to zoom out the face\r\n// if it was larger than the card size.\r\n// zoom ratio is calculated based on\r\n// size and face cahracter count\r\n\r\nconst Face = props => {\r\n\tconst { date, skeleton, face, size, ...others } = props;\r\n\r\n\tconst [zoom, setZoom] = useState(false);\r\n\r\n\tconst handleZoom = () => setZoom(!zoom);\r\n\r\n\tif (skeleton) {\r\n\t\treturn (\r\n\t\t\t<div {...others}>\r\n\t\t\t\t<Text>\r\n\t\t\t\t\t<SkeletonText variant=\"text\" />\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Top>\r\n\t\t\t\t\t<SkeletonSize variant=\"rect\" />\r\n\t\t\t\t\t<Date>\r\n\t\t\t\t\t\t<SkeletonDate variant=\"text\" />\r\n\t\t\t\t\t</Date>\r\n\t\t\t\t</Top>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div onClick={handleZoom} {...others}>\r\n\t\t\t<Top>\r\n\t\t\t\t<Size>\r\n\t\t\t\t\t<FormatSizeIcon />\r\n\t\t\t\t\t{size}\r\n\t\t\t\t</Size>\r\n\t\t\t\t<Date>{date}</Date>\r\n\t\t\t</Top>\r\n\t\t\t<Text\r\n\t\t\t\tzoom={zoom}\r\n\t\t\t\tratio={(20 * 1) / (face.length + size)}\r\n\t\t\t\tsize={size}\r\n\t\t\t>\r\n\t\t\t\t{face}\r\n\t\t\t</Text>\r\n\t\t\t<ZoomText zoom={zoom}>\r\n\t\t\t\t{zoom ? \"Tap for original\" : \"Tap to zoom out\"}\r\n\t\t\t</ZoomText>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst ZoomText = styled.div`\r\n\tposition: absolute;\r\n\tbottom: 2px;\r\n\tleft: 0;\r\n\tfont-size: 14px;\r\n\twidth: 100%;\r\n\ttext-align: center;\r\n\tcolor: ${({ theme, zoom }) =>\r\n\t\tzoom ? theme.palette.secondary.main : theme.palette.semiLight.main};\r\n\ttext-transform: none;\r\n`;\r\n\r\nconst SkeletonText = styled(Skeleton)`\r\n\twidth: 120px;\r\n\theight: 40px;\r\n`;\r\nconst SkeletonSize = styled(Skeleton)`\r\n\tpadding: 25px;\r\n\theight: 0;\r\n\tborder-radius: 0 0 5px 0;\r\n`;\r\nconst SkeletonDate = styled(Skeleton)`\r\n\twidth: 100px;\r\n\theight: 20px;\r\n\tdisplay: inline-block;\r\n`;\r\n\r\nconst Top = styled.div`\r\n\tdisplay: flex;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n`;\r\n\r\nconst Text = styled.div`\r\n\tposition: absolute;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twhite-space: nowrap;\r\n\ttransition: transform 0.5s;\r\n\tfont-size: ${({ size }) => size}px;\r\n\ttransform: scale(${({ zoom, ratio }) => (zoom ? ratio : \"1\")});\r\n`;\r\n\r\nconst Size = styled.div`\r\n\tbackground-color: ${({ theme }) => theme.palette.primary.main};\r\n\tcolor: ${({ theme }) => theme.palette.ultraLight.main};\r\n\tpadding: 10px;\r\n\tborder-radius: 0 0 5px 0;\r\n\twhite-space: nowrap;\r\n`;\r\n\r\nconst Date = styled.div`\r\n\tcolor: ${({ theme }) => theme.palette.light.main};\r\n\tpadding: 10px;\r\n\tborder-radius: 0 0 5px 0;\r\n\twidth: 100%;\r\n\ttext-transform: none;\r\n`;\r\n\r\nexport default styled(Face)`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tposition: relative;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\n// renders price and a fake buy button\r\n\r\nconst Footer = props => {\r\n\tconst { skeleton, price, ...others } = props;\r\n\r\n\tif (skeleton) {\r\n\t\treturn <Skeleton variant=\"rect\" {...others}></Skeleton>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div {...others}>\r\n\t\t\t<Price>\r\n\t\t\t\t<Dollar>$</Dollar>\r\n\t\t\t\t{price}\r\n\t\t\t</Price>\r\n\t\t\t<Buy>\r\n\t\t\t\t<Cart />\r\n\t\t\t\tBuy\r\n\t\t\t</Buy>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst Dollar = styled.span`\r\n\tfont-size: 25px;\r\n\tfont-weight: bold;\r\n\tmargin-right: 8px;\r\n\tvertical-align: top;\r\n`;\r\n\r\nconst Price = styled.div`\r\n\tfont-size: 20px;\r\n\tdisplay: flex;\r\n\tflex-wrap: nowrap;\r\n\talign-items: center;\r\n\twhite-space: nowrap;\r\n\theight: 100%;\r\n\tpadding: 0 15px;\r\n\tbackground-color: ${({ theme }) => theme.palette.semiLight.main};\r\n\tcolor: ${({ theme }) => theme.palette.light.main};\r\n`;\r\n\r\nconst Buy = styled.div`\r\n\tdisplay: flex;\r\n\tflex-wrap: nowrap;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tcolor: ${({ theme }) => theme.palette.ultraLight.main};\r\n\tbackground-color: ${({ theme }) => theme.palette.primary.main};\r\n\tfont-size: 24px;\r\n`;\r\n\r\nconst Cart = styled(ShoppingCartIcon)`\r\n\tfont-size: inherit;\r\n\tmargin-right: 10px;\r\n`;\r\n\r\nexport default styled(Footer)`\r\n\theight: 50px;\r\n\tdisplay: flex;\r\n\tflex-wrap: nowrap;\r\n`;\r\n","// takes price in cents and\r\n// returns in dollars, uses\r\n// string operations to overcome\r\n// JS floating point precision problem\r\n\r\nexport default cent => {\r\n\tif (!cent) {\r\n\t\treturn \"0.00\";\r\n\t}\r\n\tconst strCent = cent.toString();\r\n\tconst dollar = strCent.substr(0, strCent.length - 2);\r\n\tconst remainingCent = strCent.substr(-2, 2);\r\n\r\n\tconst out = `${dollar.length ? dollar : \"0\"}.${\r\n\t\tremainingCent.length === 2 ? remainingCent : `0${remainingCent}`\r\n\t}`;\r\n\r\n\treturn out;\r\n};\r\n","import formatDate from \"./formatDate\";\r\n\r\n// takes date string and returns\r\n// exact date if date is more than\r\n// 1 week ago, otherwise returns\r\n// approximate relative date\r\n// this could return exact relative\r\n// date (like '10 mins 2 hours 4 days ...')\r\n// but this is waste of time (not hard though)\r\n\r\nexport default dateStr => {\r\n\tconst date = new Date(dateStr);\r\n\tconst now = Date.now();\r\n\tconst diff = parseInt((now - date.getTime()) / 1000);\r\n\tif (diff > 24 * 3600 * 7) {\r\n\t\treturn formatDate(date);\r\n\t} else {\r\n\t\tif (diff < 3600) {\r\n\t\t\tconst count = parseInt(diff / 60);\r\n\t\t\treturn `${count} minute${count > 1 ? \"s\" : \"\"} ago`;\r\n\t\t} else if (diff < 3600 * 24) {\r\n\t\t\tconst count = parseInt(diff / 3600);\r\n\t\t\treturn `${count} hour${count > 1 ? \"s\" : \"\"} ago`;\r\n\t\t} else {\r\n\t\t\tconst count = parseInt(diff / (3600 * 24));\r\n\t\t\treturn `${count} day${count > 1 ? \"s\" : \"\"} ago`;\r\n\t\t}\r\n\t}\r\n};\r\n","// takes date object and returns\r\n// formatted string\r\n\r\nexport default date => {\r\n\tconst monthNames = [\r\n\t\t\"January\",\r\n\t\t\"February\",\r\n\t\t\"March\",\r\n\t\t\"April\",\r\n\t\t\"May\",\r\n\t\t\"June\",\r\n\t\t\"July\",\r\n\t\t\"August\",\r\n\t\t\"September\",\r\n\t\t\"October\",\r\n\t\t\"November\",\r\n\t\t\"December\"\r\n\t];\r\n\r\n\tconst day = date.getDate();\r\n\tconst monthIndex = date.getMonth();\r\n\tconst year = date.getFullYear();\r\n\r\n\treturn `${day} ${monthNames[monthIndex]} ${year}`;\r\n};\r\n","import React, { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Face from \"./components/Face\";\r\nimport Footer from \"./components/Footer\";\r\nimport centToDollar from \"../../functions/centToDollar\";\r\nimport relativeDate from \"../../functions/relativeDate\";\r\n\r\n// renders product card responsively,\r\n// uses react memo to avoid unnecessary\r\n// re-renders\r\n\r\nconst widths = { xs: 98, sm: 45, md: 24 };\r\n\r\nconst ProductCard = props => {\r\n\tconst { skeleton, children, size, face, date, price, ...others } = props;\r\n\treturn (\r\n\t\t<div {...others}>\r\n\t\t\t<RatioContainer disabled={skeleton}>\r\n\t\t\t\t<ContentContainer skeleton={skeleton}>\r\n\t\t\t\t\t<Face\r\n\t\t\t\t\t\tdate={relativeDate(date)}\r\n\t\t\t\t\t\tskeleton={skeleton}\r\n\t\t\t\t\t\tsize={size}\r\n\t\t\t\t\t\tface={face}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Footer skeleton={skeleton} price={centToDollar(price)} />\r\n\t\t\t\t</ContentContainer>\r\n\t\t\t</RatioContainer>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst ContentContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: space-between;\r\n\tborder-radius: 5px;\r\n\toverflow: hidden;\r\n\ttransition: box-shadow 0.4s;\r\n\tbackground-color: ${({ theme, skeleton }) =>\r\n\t\tskeleton ? theme.palette.grey[500] : theme.palette.dark.main};\r\n\tcolor: ${({ theme }) => theme.palette.secondary.main};\r\n\t&:hover {\r\n\t\tbox-shadow: 0px 0px 12px 2px ${({ theme }) => theme.palette.dark.main};\r\n\t}\r\n`;\r\n\r\nconst RatioContainer = styled(Button)`\r\n\tposition: relative;\r\n\tpadding-top: 100%;\r\n\twidth: 100%;\r\n`;\r\n\r\nconst StyledProductCard = styled(ProductCard)`\r\n\tmargin: 3% 0;\r\n\twidth: ${widths.xs}%;\r\n\t${({ theme }) => theme.breakpoints.up(\"sm\")} {\r\n\t\twidth: ${widths.sm}%;\r\n\t}\r\n\t${({ theme }) => theme.breakpoints.up(\"md\")} {\r\n\t\twidth: ${widths.md}%;\r\n\t}\r\n`;\r\n\r\nexport default memo(StyledProductCard, (prev, next) => {\r\n\treturn (\r\n\t\tprev.skeleton === next.skeleton &&\r\n\t\tprev.children === next.children &&\r\n\t\tprev.size === next.size &&\r\n\t\tprev.face === next.face &&\r\n\t\tprev.date === next.date &&\r\n\t\tprev.price === next.price\r\n\t);\r\n});\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport LogoImg from \"../../assets/logo/light.png\";\r\n\r\n// this is the app logo\r\n\r\nconst Logo = props => {\r\n\tconst { ...others } = props;\r\n\treturn <img src={LogoImg} alt=\"app logo\" {...others} />;\r\n};\r\n\r\nexport default styled(Logo)`\r\n\tvertical-align: middle;\r\n\twidth: ${({ size }) => (size ? size : 50)}px;\r\n\theight: ${({ size }) => (size ? size : 50)}px;\r\n\tcolor: ${({ color, theme }) => color && theme.palette[color].main};\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Logo from \"../../Logo\";\r\n\r\n// this renders the logo and text beside it\r\n// responsively\r\n\r\nconst LogoText = props => {\r\n\tconst { text, ...others } = props;\r\n\treturn (\r\n\t\t<div {...others}>\r\n\t\t\t<Logo color=\"primary\" />\r\n\t\t\t<Text>{text}</Text>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst Text = styled.span`\r\n\tfont-size: 16px;\r\n\tfont-weight: bold;\r\n\tcolor: ${({ theme }) => theme.palette.primary.main};\r\n\t${({ theme }) => theme.breakpoints.up(\"sm\")} {\r\n\t\tfont-size: 18px;\r\n\t}\r\n\t${({ theme }) => theme.breakpoints.up(\"md\")} {\r\n\t\tfont-size: 22px;\r\n\t}\r\n`;\r\n\r\nexport default styled(LogoText)`\r\n\twhite-space: nowrap;\r\n\t${Logo} {\r\n\t\tmargin-right: 15px;\r\n\t\twidth: 40px;\r\n\t\theight: 40px;\r\n\t\t${({ theme }) => theme.breakpoints.up(\"sm\")} {\r\n\t\t\twidth: 50px;\r\n\t\t\theight: 50px;\r\n\t\t}\r\n\t\t${({ theme }) => theme.breakpoints.up(\"md\")} {\r\n\t\t\tmargin-right: 20px;\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n// this renders the buttons for use in header\r\n// responsively\r\n\r\nconst HeaderButton = props => {\r\n\tconst { disabled, value, onChange, ...others } = props;\r\n\treturn <Button variant=\"contained\" {...others} />;\r\n};\r\n\r\nexport default styled(HeaderButton)`\r\n\tfont-size: 12px;\r\n\tmargin: 0 0.5%;\r\n\ttext-align: right;\r\n\tcursor: ${({ disabled }) => (disabled ? \"no-drop\" : \"pointer\")};\r\n\t&:hover {\r\n\t\tbackground-color: ${({ theme, selected }) =>\r\n\t\t\tselected\r\n\t\t\t\t? theme.palette.primary.main\r\n\t\t\t\t: theme.palette.semiLight.main};\r\n\t}\r\n\tbackground-color: ${({ theme, selected }) =>\r\n\t\tselected ? theme.palette.primary.main : theme.palette.semiLight.main};\r\n\tcolor: ${({ theme }) => theme.palette.light.main};\r\n\t${({ theme }) => theme.breakpoints.up(\"sm\")} {\r\n\t\tfont-size: 14px;\r\n\t}\r\n\t${({ theme }) => theme.breakpoints.up(\"md\")} {\r\n\t\tfont-size: 18px;\r\n\t\tmargin: 0 2%;\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport HeaderButton from \"./HeaderButton\";\r\n\r\n// renders options to sort products\r\n// changes size and content for\r\n// responsiveness\r\n\r\nconst SortBy = props => {\r\n\tconst { shrink, show, value, disabled, onChange, ...others } = props;\r\n\r\n\tconst handleChange = newValue => () =>\r\n\t\t!disabled && onChange && onChange(newValue);\r\n\r\n\treturn (\r\n\t\t<div {...others}>\r\n\t\t\t<HeaderButton\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t\tonClick={handleChange(\"price\")}\r\n\t\t\t\tselected={value === \"price\"}\r\n\t\t\t>\r\n\t\t\t\t{shrink ? \"By Price\" : \"Cheapest First\"}\r\n\t\t\t</HeaderButton>\r\n\t\t\t<HeaderButton\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t\tonClick={handleChange(\"size\")}\r\n\t\t\t\tselected={value === \"size\"}\r\n\t\t\t>\r\n\t\t\t\t{shrink ? \"By Size\" : \"Smallest First\"}\r\n\t\t\t</HeaderButton>\r\n\t\t\t<HeaderButton\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t\tonClick={handleChange(\"id\")}\r\n\t\t\t\tselected={value === \"id\"}\r\n\t\t\t>\r\n\t\t\t\tBy ID\r\n\t\t\t</HeaderButton>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default styled(SortBy)`\r\n\tdisplay: ${({ show }) => (show ? \"block\" : \"none\")};\r\n\ttext-align: left;\r\n\t${({ theme }) => theme.breakpoints.up(\"sm\")} {\r\n\t\tdisplay: block;\r\n\t\ttext-align: right;\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SortIcon from \"@material-ui/icons/Sort\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\n// renders icon buttons for small\r\n// devices to show/hide sort options\r\n\r\nconst SortOptions = props => {\r\n\tconst { hide, ...others } = props;\r\n\r\n\treturn (\r\n\t\t<IconButton {...others}>\r\n\t\t\t{hide ? <CloseIcon /> : <SortIcon />}\r\n\t\t</IconButton>\r\n\t);\r\n};\r\n\r\nexport default styled(SortOptions)`\r\n\tcolor: ${({ theme }) => theme.palette.primary.main};\r\n\t${({ theme }) => theme.breakpoints.up(\"sm\")} {\r\n\t\tdisplay: none;\r\n\t}\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LogoText from \"./components/LogoText\";\r\nimport SortBy from \"./components/SortBy\";\r\nimport SortOptions from \"./components/SortOptions\";\r\n\r\n// renders app header responsively\r\n\r\nconst Header = props => {\r\n\tconst { sortBy, onSortChange, sortDisabled, ...others } = props;\r\n\r\n\tconst breakpoints = {\r\n\t\txs: 11,\r\n\t\tmd: 10\r\n\t};\r\n\r\n\tconst theme = useTheme();\r\n\tconst breakpointMatch = {\r\n\t\tsm: useMediaQuery(theme.breakpoints.up(\"sm\"))\r\n\t};\r\n\r\n\tconst [showSortBy, setShowSortBy] = useState(false);\r\n\r\n\tconst handleShowSortChange = () => {\r\n\t\tsetShowSortBy(!showSortBy);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<header {...others}>\r\n\t\t\t<Container container item {...breakpoints}>\r\n\t\t\t\t{(!showSortBy || breakpointMatch.sm) && (\r\n\t\t\t\t\t<LogoTextContainer>\r\n\t\t\t\t\t\t<LogoText text=\"Face Shop\" />\r\n\t\t\t\t\t</LogoTextContainer>\r\n\t\t\t\t)}\r\n\t\t\t\t<SortByContainer>\r\n\t\t\t\t\t<SortBy\r\n\t\t\t\t\t\tdisabled={sortDisabled}\r\n\t\t\t\t\t\tvalue={sortBy}\r\n\t\t\t\t\t\tonChange={onSortChange}\r\n\t\t\t\t\t\tshow={showSortBy}\r\n\t\t\t\t\t\tshrink={!breakpointMatch.sm}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</SortByContainer>\r\n\t\t\t\t<SortOptions hide={showSortBy} onClick={handleShowSortChange} />\r\n\t\t\t</Container>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nconst LogoTextContainer = styled.div``;\r\n\r\nconst SortByContainer = styled.div`\r\n\twidth: 100%;\r\n`;\r\n\r\nconst Container = styled(Grid)`\r\n\tdisplay: inline-flex;\r\n\tflex-wrap: nowrap;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\theight: 100%;\r\n`;\r\n\r\nexport default styled(Header)`\r\n\ttext-align: center;\r\n\twidth: 100%;\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\tbox-shadow: 0 0px 4px -2px ${({ theme }) => theme.palette.light.main};\r\n\tbackground-color: ${({ theme }) => theme.palette.dark.main};\r\n\tz-index: ${({ theme }) => theme.zIndex.max};\r\n\theight: ${({ theme }) => theme.header.height.small}px;\r\n\t${({ theme }) => theme.breakpoints.up(\"sm\")} {\r\n\t\theight: ${({ theme }) => theme.header.height.medium}px;\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport SentimentDissatisfiedIcon from \"@material-ui/icons/SentimentDissatisfied\";\r\n\r\n// this renders a circular progress when\r\n// loading more products and displays\r\n// end of catalogue when no more products\r\n\r\nconst Footer = props => {\r\n\tconst { hide, loading, ...others } = props;\r\n\r\n\treturn (\r\n\t\t<div {...others}>\r\n\t\t\t{!hide &&\r\n\t\t\t\t(loading ? (\r\n\t\t\t\t\t<Progess />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<EndText>\r\n\t\t\t\t\t\t<Sad />\r\n\t\t\t\t\t\t~ end of catalogue ~\r\n\t\t\t\t\t\t<Sad />\r\n\t\t\t\t\t</EndText>\r\n\t\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst Sad = styled(SentimentDissatisfiedIcon)`\r\n\tfont-size: 28px;\r\n\tvertical-align: middle;\r\n\tmargin: 0 5px;\r\n`;\r\n\r\nconst Progess = styled(CircularProgress)`\r\n\tcolor: ${({ theme }) => theme.palette.primary.main};\r\n`;\r\n\r\nconst EndText = styled.span`\r\n\tfont-size: 22px;\r\n`;\r\n\r\nexport default styled(Footer)`\r\n\twidth: 100%;\r\n\theight: 40px;\r\n\ttext-align: center;\r\n\tpadding: 10px 0 40px 0;\r\n`;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\n// this is the Ad card, it renders\r\n// a lid that opens when image loaded\r\n// with animation\r\n\r\nconst lidWidth = 70;\r\n\r\nconst AdCard = props => {\r\n\tconst { src, alt, ...others } = props;\r\n\r\n\tconst [loaded, setLoaded] = useState(false);\r\n\tconst [expand, setExpand] = useState(false);\r\n\r\n\tconst mainRef = useRef();\r\n\r\n\tconst theme = useTheme();\r\n\tconst breakpointMatch = {\r\n\t\txs: useMediaQuery(theme.breakpoints.down(\"xs\"))\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (expand) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst mainContainer = mainRef.current;\r\n\t\tif (!mainContainer) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst timer = setInterval(() => {\r\n\t\t\tconst top = mainContainer.offsetTop;\r\n\t\t\tconst height = mainContainer.offsetHeight;\r\n\t\t\tif (\r\n\t\t\t\twindow.pageYOffset + window.innerHeight - top >\r\n\t\t\t\t\tparseInt((2 * height) / 3) &&\r\n\t\t\t\tloaded\r\n\t\t\t) {\r\n\t\t\t\tsetExpand(true);\r\n\t\t\t}\r\n\t\t}, 1000);\r\n\t\treturn () => clearInterval(timer);\r\n\t}, [mainRef, loaded, expand]);\r\n\r\n\tconst handleImageLoad = () => setLoaded(true);\r\n\r\n\treturn (\r\n\t\t<div ref={mainRef} {...others}>\r\n\t\t\t<Container fullWidth={breakpointMatch.xs} expand={expand}>\r\n\t\t\t\t<LidHalf grow=\"left\">\r\n\t\t\t\t\t<div />\r\n\t\t\t\t</LidHalf>\r\n\t\t\t\t<Image onLoad={handleImageLoad} src={src} />\r\n\t\t\t\t<LidHalf grow=\"right\">\r\n\t\t\t\t\t<div />\r\n\t\t\t\t</LidHalf>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst Image = styled.img`\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\tobject-fit: cover;\r\n`;\r\n\r\nconst LidHalf = styled.div`\r\n\tposition: absolute;\r\n\theight: 100%;\r\n\toverflow: hidden;\r\n\twidth: ${lidWidth}px;\r\n\tbackground-color: ${({ theme }) => theme.palette.dark.main};\r\n\ttop: 0;\r\n\t${({ grow }) =>\r\n\t\tgrow === \"left\" ? \"border-right:\" : \"border-left:\"}  0.5px solid ${({\r\n\ttheme\r\n}) => theme.palette.semiDark.main};\r\n\t${({ grow }) => (grow === \"left\" ? \"left: 0\" : \"right: 0\")};\r\n\tborder-radius: ${({ grow }) =>\r\n\t\tgrow === \"left\" ? \"50% 0 0 50%\" : \"0 50% 50% 0\"};\r\n\t> * {\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\twidth: 70px;\r\n\t\theight: 70px;\r\n\t\ttransform: translate(\r\n\t\t\t\t${({ grow }) => (grow === \"left\" ? \"50%\" : \"-50%\")},\r\n\t\t\t\t-50%\r\n\t\t\t)\r\n\t\t\trotate(45deg);\r\n\t\tbackground-color: ${({ theme }) => theme.palette.primary.main};\r\n\t}\r\n`;\r\n\r\nconst Container = styled.div`\r\n\tdisplay: inline-block;\r\n\theight: 100%;\r\n\tposition: relative;\r\n\tpadding: 0 ${lidWidth}px;\r\n\tbox-sizing: border-box;\r\n\ttransition: width 1s;\r\n\twidth: ${({ expand, fullWidth }) =>\r\n\t\texpand ? (fullWidth ? \"100%\" : \"410px\") : \"0.2px\"};\r\n`;\r\n\r\nexport default styled(AdCard)`\r\n\twidth: 100%;\r\n\theight: 150px;\r\n\ttext-align: center;\r\n\tmargin: 20px 0;\r\n`;\r\n","import React, { useState, useEffect, useRef, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport fetchProductRequest from \"../../../api/products/fetchProducts\";\r\nimport fetchAdURLRequest from \"../../../api/ads/fetchAdURL\";\r\nimport GridList from \"../../components/GridList\";\r\nimport ProductCard from \"../../components/ProductCard\";\r\nimport Header from \"../../components/Header\";\r\nimport Footer from \"../../components/Footer\";\r\nimport AdCard from \"../../components/AdCard\";\r\n\r\nconst Catalogue = props => {\r\n\t// PROPS\r\n\r\n\tconst { ...others } = props;\r\n\r\n\t// CONSTANTS\r\n\r\n\tconst chunkSize = 16;\r\n\tconst insertAdEvery = 20;\r\n\tconst initialLimit = chunkSize;\r\n\tconst preLoadAdsCount = 5;\r\n\r\n\t// HOOKS\r\n\r\n\tconst { state: fetchProductState, fetch: fetchProducts } = useFetch();\r\n\tconst { state: fetchAdsURLState, fetch: fetchAdsURL } = useFetch();\r\n\tconst [products, setProducts] = useState([]);\r\n\tconst [ads, setAds] = useState([]);\r\n\tconst [limit, setLimit] = useState(initialLimit);\r\n\tconst [sortBy, setSortBy] = useState(\"price\");\r\n\tconst [skeletonLimit, setSkeletonLimit] = useState(0);\r\n\tconst [endOfCatalogue, setEndOfCatalogue] = useState(false);\r\n\r\n\t// this will guarantee all stale XHR callbacks\r\n\t// are ignored.it guarantees requests\r\n\t// that were sent before changing sortBy, will be\r\n\t// ignored if fulfil after change\r\n\tconst changeOriginStamp = useRef();\r\n\r\n\tconst gridListRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tchangeOriginStamp.current = Date.now();\r\n\t\tsetLimit(0);\r\n\t\tsetProducts([]);\r\n\t\tsetEndOfCatalogue(false);\r\n\t\tsetAds([]);\r\n\t\tsetSkeletonLimit(chunkSize);\r\n\t\thandleFetchProducts(true);\r\n\t\thandleFetchAdsURL();\r\n\t\twindow.scrollTo(0, 0);\r\n\t}, [sortBy, changeOriginStamp]);\r\n\r\n\t// set two intervals:\r\n\t// \t1. 'bottomChecker' to check if user\r\n\t// \treached bottom of list, if so, loads\r\n\t// \tloads more items and if items length\r\n\t// \twas bigger than 'limit' (visible cards),\r\n\t// \tit expands visible view\r\n\t// \t2. 'idleChecker' to fetch more items every\r\n\t//  5 seconds in order to improve UX, also will\r\n\t//  load ads to show every 'insertAdEvery' (20 for now)\r\n\t//\titem, this fetch when some timeout passed after\r\n\t//  last user action, like mouse and keyboard events\r\n\t//  but it's very rare and 5 seconds seems more useful\r\n\t//  to pre-fetch\r\n\t// (could listen on window 'scroll' event instead of\r\n\t// intervals but it badly affects performance when user\r\n\t// scrolls, so intervals are more performant)\r\n\tuseEffect(() => {\r\n\t\tif (AllCatalogueShown) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst bottomChecker = setInterval(loadMoreIfBottom, 200);\r\n\t\tconst idleChecker = setInterval(loadMoreIfIdle, 5000);\r\n\t\treturn () => {\r\n\t\t\tclearInterval(bottomChecker);\r\n\t\t\tclearInterval(idleChecker);\r\n\t\t};\r\n\t}, [fetchProductState, fetchAdsURLState, endOfCatalogue, limit, products]);\r\n\r\n\t// FUNCTIONS\r\n\r\n\tconst loadMoreIfBottom = () => {\r\n\t\tif (skeletonLimit > 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (checkIfReachedBottom()) {\r\n\t\t\texpandVisible();\r\n\t\t\thandleFetchProducts();\r\n\t\t\thandleFetchAdsURL();\r\n\t\t}\r\n\t};\r\n\r\n\tconst loadMoreIfIdle = () => {\r\n\t\tif (skeletonLimit > 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (ads.length < preLoadAdsCount + limit / insertAdEvery) {\r\n\t\t\thandleFetchAdsURL();\r\n\t\t}\r\n\t\thandleFetchProducts();\r\n\t};\r\n\r\n\tconst checkIfReachedBottom = () => {\r\n\t\tif (!gridListRef.current) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst viewPortBottom = window.pageYOffset + window.innerHeight;\r\n\t\tconst listBottom =\r\n\t\t\tgridListRef.current.offsetHeight + gridListRef.current.offsetTop;\r\n\t\tif (viewPortBottom > listBottom - 200) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\tconst handleFetchProducts = reset => {\r\n\t\tif (endOfCatalogue && !reset) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst { waiting } = fetchProductState;\r\n\t\tif (waiting && !reset) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfetchProducts(\r\n\t\t\tfetchProductRequest({\r\n\t\t\t\tpage: reset ? 1 : parseInt(products.length / chunkSize) + 1,\r\n\t\t\t\tlimit: chunkSize,\r\n\t\t\t\tsort: sortBy\r\n\t\t\t}),\r\n\t\t\thandleFetchProductsSuccess(reset, Date.now())\r\n\t\t);\r\n\t};\r\n\tconst handleFetchProductsSuccess = (reset, startStamp) => response => {\r\n\t\tif (\r\n\t\t\tchangeOriginStamp.current &&\r\n\t\t\tstartStamp < changeOriginStamp.current\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst { data } = response;\r\n\t\tsetSkeletonLimit(0);\r\n\t\treset && setLimit(initialLimit);\r\n\t\tsetProducts(reset ? data : products.concat(data));\r\n\t\tif (data.length < chunkSize) {\r\n\t\t\tsetEndOfCatalogue(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleFetchAdsURL = () => {\r\n\t\tif (endOfCatalogue) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst { waiting } = fetchAdsURLState;\r\n\t\tif (waiting) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfetchAdsURL(fetchAdURLRequest(), handleFetchAdsURLSuccess(Date.now()));\r\n\t};\r\n\tconst handleFetchAdsURLSuccess = startStamp => response => {\r\n\t\tif (\r\n\t\t\tchangeOriginStamp.current &&\r\n\t\t\tstartStamp < changeOriginStamp.current\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst url = response.request.responseURL;\r\n\t\t// check if new ad URL is the same as last\r\n\t\t// shown ad, if so, ignore this add and load\r\n\t\t// another one\r\n\t\tif (url === ads[ads.length - 1]) {\r\n\t\t\thandleFetchAdsURL();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetAds(ads.concat([url]));\r\n\t};\r\n\r\n\tconst expandVisible = () => {\r\n\t\tif (products.length <= limit) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetLimit(limit + chunkSize);\r\n\t};\r\n\r\n\tconst handleSortChange = newValue => setSortBy(newValue);\r\n\r\n\t// RENDER VARIABLES\r\n\r\n\tconst AllCatalogueShown = endOfCatalogue && products.length <= limit;\r\n\r\n\tconst displayProducts = products.slice(0, limit);\r\n\r\n\t// create array with 'skeletonLimit' number\r\n\t// of cells to create skeleton view before load\r\n\t// this could be implemented without memo\r\n\t// since the loop will be repeated only 10 times\r\n\tconst skeletonProducts = useMemo(() => {\r\n\t\tconst out = [];\r\n\t\tfor (let i = 0; i < skeletonLimit; i++) {\r\n\t\t\tout.push(i);\r\n\t\t}\r\n\t\treturn out;\r\n\t}, [skeletonLimit]);\r\n\t// Header was better to be out of containers and send\r\n\t// sortBy state by global state like Redux or React Context\r\n\t// but for now, it was easier to put it here to avoid state\r\n\t// complexity by adding global state, however for a large scale\r\n\t// app, global state is inevitable\r\n\treturn (\r\n\t\t<div {...others}>\r\n\t\t\t<Header\r\n\t\t\t\tsortBy={sortBy}\r\n\t\t\t\tonSortChange={handleSortChange}\r\n\t\t\t\tsortDisabled={skeletonLimit}\r\n\t\t\t/>\r\n\t\t\t<GridList ref={gridListRef}>\r\n\t\t\t\t<>\r\n\t\t\t\t\t{skeletonProducts.map(product => (\r\n\t\t\t\t\t\t<ProductCard key={product} skeleton />\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t{displayProducts.map((product, index) => {\r\n\t\t\t\t\t\tconst modeAdEvery = (index + 1) % insertAdEvery;\r\n\t\t\t\t\t\tconst adIndex = parseInt(index / insertAdEvery);\r\n\t\t\t\t\t\tconst ad = ads[adIndex];\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<React.Fragment key={product.id}>\r\n\t\t\t\t\t\t\t\t<ProductCard\r\n\t\t\t\t\t\t\t\t\tsize={product.size}\r\n\t\t\t\t\t\t\t\t\tface={product.face}\r\n\t\t\t\t\t\t\t\t\tdate={product.date}\r\n\t\t\t\t\t\t\t\t\tprice={product.price}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{!modeAdEvery && <AdCard src={ad} alt=\"adv\" />}\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</>\r\n\t\t\t</GridList>\r\n\t\t\t<Footer hide={skeletonLimit} loading={!AllCatalogueShown} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default styled(Catalogue)`\r\n\tpadding-top: ${({ theme }) => theme.header.height.small}px;\r\n\t${({ theme }) => theme.breakpoints.up(\"sm\")} {\r\n\t\tpadding-top: ${({ theme }) => theme.header.height.medium}px;\r\n\t}\r\n`;\r\n","// API URLs\r\n\r\nconst BASE_PATH = \"http://localhost:3000\";\r\n\r\nexport const FETCH_PRODUCTS_URL = BASE_PATH + \"/api/products\";\r\n\r\nexport const FETCH_ADS_URL = BASE_PATH + \"/ads\";\r\n","import { FETCH_ADS_URL } from \"../config/constants\";\r\n\r\n// this function creates a request for\r\n// ads API to be passed to axios later\r\n\r\nexport default () => {\r\n\tconst rnd = parseInt(Math.random() * 10000);\r\n\r\n\tconst query = `?r=${rnd}`;\r\n\r\n\treturn {\r\n\t\turl: FETCH_ADS_URL + query,\r\n\t\tmethod: \"GET\"\r\n\t};\r\n};\r\n","import React from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { StylesProvider } from \"@material-ui/core\";\r\nimport theme from \"./theme\";\r\nimport GlobalStyles from \"./styles\";\r\nimport Catalogue from \"./containers/Catalogue\";\r\n\r\n// exports layout, wrapped in theme provider\r\n// app theme merged with MUI theme\r\n// wrapped in StyleProvider with injectFirst\r\n// prop to make styled-component styles\r\n// override MUI styles\r\n\r\nconst MUIMergedTheme = createMuiTheme(theme);\r\n\r\nconst Layout = props => {\r\n\treturn (\r\n\t\t<StylesProvider injectFirst>\r\n\t\t\t<ThemeProvider theme={MUIMergedTheme}>\r\n\t\t\t\t<GlobalStyles />\r\n\t\t\t\t<Catalogue />\r\n\t\t\t</ThemeProvider>\r\n\t\t</StylesProvider>\r\n\t);\r\n};\r\n\r\nexport default Layout;\r\n","// app theme\r\n\r\nexport default {\r\n\tfontFamily: {\r\n\t\tprimary: `Tahoma, Geneva, sans-serif`\r\n\t},\r\n\tpalette: {\r\n\t\tprimary: { main: \"rgb(97,137,48)\" },\r\n\t\tsecondary: { main: \"rgb(135, 194, 50)\" },\r\n\t\tdark: { main: \"rgb(34, 38, 41)\" },\r\n\t\tsemiDark: { main: \"rgb(71, 74, 79)\" },\r\n\t\tsemiLight: { main: \"rgb(106, 110, 113)\" },\r\n\t\tlight: { main: \"rgb(206, 210, 213)\" },\r\n\t\tultraLight: { main: \"white\" }\r\n\t},\r\n\theader: {\r\n\t\theight: {\r\n\t\t\tsmall: \"50\",\r\n\t\t\tmedium: \"70\"\r\n\t\t}\r\n\t},\r\n\tzIndex: {\r\n\t\tmin: 0,\r\n\t\tmed: 1,\r\n\t\tmax: 99999\r\n\t}\r\n};\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport Layout from \"./layout\";\r\n\r\n// the entire app\r\n// could use redux to manage state but for\r\n// tiny apps like this, global state is\r\n// over doing\r\n\r\nconst App = props => {\r\n\treturn <Layout />;\r\n};\r\n\r\nrender(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}